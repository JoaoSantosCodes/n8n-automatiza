apiVersion: batch/v1
kind: CronJob
metadata:
  name: n8n-backup
  namespace: n8n
spec:
  schedule: "0 2 * * *"  # Executa às 2h da manhã todos os dias
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - |
              # Backup do PostgreSQL
              PGPASSWORD=$DB_PASSWORD pg_dump -h postgres -U $DB_USER $DB_NAME > /backup/n8n-$(date +%Y%m%d).sql
              
              # Backup dos workflows
              kubectl cp n8n/n8n-0:/home/node/.n8n /backup/workflows-$(date +%Y%m%d)
              
              # Compactar backups
              cd /backup
              tar czf n8n-backup-$(date +%Y%m%d).tar.gz *.sql workflows-$(date +%Y%m%d)
              
              # Upload para S3
              aws s3 cp n8n-backup-$(date +%Y%m%d).tar.gz s3://$S3_BUCKET/backups/
              
              # Limpar backups antigos (manter últimos 7 dias)
              find /backup -type f -mtime +7 -delete
            env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: db_user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: db_password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: n8n-config
                  key: db_name
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: access_key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: secret_key
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: backup-config
                  key: s3_bucket
            volumeMounts:
            - name: backup-volume
              mountPath: /backup
          volumes:
          - name: backup-volume
            persistentVolumeClaim:
              claimName: backup-pvc
          restartPolicy: OnFailure 