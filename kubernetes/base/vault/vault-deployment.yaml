apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: n8n
  labels:
    app: vault
spec:
  serviceName: vault
  replicas: 3
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      containers:
      - name: vault
        image: vault:1.13.3
        ports:
        - containerPort: 8200
          name: http
        - containerPort: 8201
          name: internal
        env:
        - name: VAULT_LOCAL_CONFIG
          valueFrom:
            configMapKeyRef:
              name: vault-config
              key: vault.hcl
        - name: VAULT_SEAL_TYPE
          value: "awskms"
        - name: AWS_KMS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: vault-aws-secrets
              key: kms_key_id
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        - name: vault-config
          mountPath: /vault/config
        - name: vault-tls
          mountPath: /vault/tls
        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: vault-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: n8n
spec:
  selector:
    app: vault
  ports:
  - name: http
    port: 8200
    targetPort: 8200
  - name: internal
    port: 8201
    targetPort: 8201
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: n8n
data:
  vault.hcl: |
    ui = true
    
    storage "raft" {
      path = "/vault/data"
      node_id = "node-${POD_NAME}"
      retry_join {
        leader_api_addr = "https://vault-0.vault:8200"
      }
      retry_join {
        leader_api_addr = "https://vault-1.vault:8200"
      }
      retry_join {
        leader_api_addr = "https://vault-2.vault:8200"
      }
    }
    
    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_cert_file = "/vault/tls/tls.crt"
      tls_key_file = "/vault/tls/tls.key"
    }
    
    seal "awskms" {
      region = "us-east-1"
      kms_key_id = "${AWS_KMS_KEY_ID}"
    }
    
    service_registration "kubernetes" {}
    
    telemetry {
      prometheus_retention_time = "24h"
      disable_hostname = true
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-aws-secrets
  namespace: n8n
type: Opaque
stringData:
  kms_key_id: "changeme"
  aws_access_key: "changeme"
  aws_secret_key: "changeme"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vault-pdb
  namespace: n8n
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: vault 