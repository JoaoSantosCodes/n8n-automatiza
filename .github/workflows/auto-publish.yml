name: Auto Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Executa diariamente à meia-noite

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Update Documentation
        run: |
          # Aqui você pode adicionar comandos para atualizar documentação automaticamente
          echo "Atualizando documentação..."

      - name: Check for changes
        id: changes
        run: |
          git status --porcelain
          echo "::set-output name=changed::$(git status --porcelain | wc -l)"

      - name: Commit and push if changed
        if: steps.changes.outputs.changed > 0
        run: |
          git add .
          git commit -m "Atualização automática - $(date +'%Y-%m-%d %H:%M:%S')"
          git push

  validate:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate Docker Compose
        run: |
          docker-compose config

      - name: Validate Scripts
        run: |
          chmod +x scripts/*.sh
          for script in scripts/*.sh; do
            bash -n "$script"
          done

      - name: Validate Markdown
        uses: nosborn/github-action-markdown-cli@v3.2.0
        with:
          files: ./*.md ./docs/*.md

  notify:
    needs: [publish, validate]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.SLACK_WEBHOOK_URL != null 